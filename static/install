#!/bin/sh
# This script is meant to be POSIX compatible, to work on as many different systems as possible.
# Please try to stick to this. Use a tool like shellcheck to validate changes.
set -eu

# the whole body of the script is wrapped in a function so that a partially
# downloaded script does not get executed by accident. The function is called
# at the end
main () {

# Reset
Color_Off='\033[0m' # Text Reset

# Regular Colors
Red='\033[0;31m'   # Red
Green='\033[0;32m' # Green
White='\033[0;0m'  # White

# Bold
Bold_Green='\033[1;32m' # Bold Green
Bold_White='\033[1m'    # Bold White

error() {
    printf "%berror%b: %s\n" "${Red}" "${Color_Off}" "$*" >&2
    exit 1
}

info() {
     printf "%b%s %b" "${White}" "$*" "${Color_Off}"
}

info_bold() {
    printf "%b%s %b" "${Bold_White}" "$*" "${Color_Off}"
}

success() {
    printf "%b%s %b" "${Green}" "$*" "${Color_Off}"
}

success_bold() {
    printf "%b%s %b" "${Bold_Green}" "$*" "${Color_Off}"
}

tildify() {
    case "$1" in
    "$HOME"/*)
        tilde_replacement=\~
        echo "$1" | sed "s|$HOME|$tilde_replacement|g"
        ;;
    *)
        echo "$1"
        ;;
    esac
}

case $(uname -ms) in
'Darwin x86_64')
    target=x86_64-apple-darwin
    ;;
'Darwin arm64')
    target=aarch64-apple-darwin
    ;;
'Linux x86_64')
    target=x86_64-unknown-linux-musl
    ;;
*)
    error "The Dune Developer Preview does not currently support $(uname -ms)."
esac

today=$(date +"%Y-%m-%d")
tar_target_name="dune-$today-$target"
tar_target="$tar_target_name.tar.gz"
dune_tar_uri="https://get.dune.build/$today/$target/$tar_target"

install_dir="$HOME/.dune"
bin_dir="$install_dir/bin"
tmp_dir="$install_dir/tmp"
exe="$bin_dir/dune"
tmp_tar="$tmp_dir/$tar_target"
tmp_tar_dir="$tmp_dir/$tar_target_name"
tmp_exe="$tmp_tar_dir/dune"
tilde_bin_dir=$(tildify "$bin_dir")

command -v tar >/dev/null 2>&1 ||
    error "Failed to find tar. This script needs tar to be able to install dune."

if [ ! -d "$bin_dir" ]; then
    mkdir -p "$bin_dir" ||
        error "Failed to create install directory \"$bin_dir\""
fi

if [ ! -d "$tmp_dir" ]; then
    mkdir -p "$tmp_dir" ||
        error "Failed to create temporary directory \"$tmp_dir\""
    trap 'rm -r "$tmp_dir"' EXIT
fi

curl --fail --location --progress-bar --output "$tmp_tar" "$dune_tar_uri" ||
    error "Failed to download dune tar from \"$dune_tar_uri\""

tar -xf "$tmp_tar" -C "$tmp_dir" > /dev/null 2>&1 ||
    error "Failed to extract dune archive content from \"$tmp_tar\""

mv "$tmp_exe" "$exe" ||
    error "Failed to move executable from $tmp_exe to $exe"

success "dune $target was installed successfully to"
success_bold "$(tildify "$exe")"
echo
echo


case $(basename "$SHELL") in
fish)
    command="set --export PATH $bin_dir \$PATH"

    fish_config=$HOME/.config/fish/config.fish
    tilde_fish_config=$(tildify "$fish_config")

    if [ -w "$fish_config" ]; then
        printf "\n# dune\n%s\n" "$command" >> "$fish_config"

        info "Added \"$tilde_bin_dir\" to \$PATH in \"$tilde_fish_config\""
        echo

        refresh_command="source $tilde_fish_config"
    else
        echo "Manually add the directory to $tilde_fish_config (or similar):"
        info_bold "  $command"
        echo
    fi
    ;;
zsh)

    command="export PATH=\"$bin_dir:\$PATH\""

    zsh_config=$HOME/.zshrc
    tilde_zsh_config=$(tildify "$zsh_config")

    if [ -w "$zsh_config" ]; then
        printf "\n# dune\n%s\n" "$command" >>"$zsh_config"

        info "Added \"$tilde_bin_dir\" to \$PATH in \"$tilde_zsh_config\""
        echo

        refresh_command="exec $SHELL"
    else
        echo "Manually add the directory to $tilde_zsh_config (or similar):"

        info_bold "  $command"
        echo
    fi
    ;;
bash)

    command="export PATH=\"$bin_dir:\$PATH\""

    bash_configs="$HOME/.bashrc $HOME/.bash_profile"

    if [ "${XDG_CONFIG_HOME:-}" ]; then
        bash_configs="$bash_configs $XDG_CONFIG_HOME/.bash_profile $XDG_CONFIG_HOME/.bashrc $XDG_CONFIG_HOME/bash_profile $XDG_CONFIG_HOME/bashrc"
    fi

    set_manually=true
    for bash_config in $bash_configs; do
        tilde_bash_config=$(tildify "$bash_config")

        if [ -w "$bash_config" ]; then
            printf "\n# dune\n%s\n" "$command" >> "$bash_config"

            info "Added \"$tilde_bin_dir\" to \$PATH in \"$tilde_bash_config\""
            echo

            refresh_command="source $bash_config"
            set_manually=false
            break
        fi
    done

    if [ $set_manually = true ]; then
        echo "Manually add the directory to $tilde_bash_config (or similar):"

        info_bold "  $command"
        echo
    fi
    ;;
*)
    echo 'Manually add the directory to ~/.bashrc (or similar):'
    info_bold "  export PATH=\"$bin_dir:\$PATH\""
    echo
    ;;
esac

echo
info "To get started, run:"
echo

if [ -n "${refresh_command+x}" ]; then
    info_bold "  $refresh_command"
    echo
fi

info_bold "  dune --help"
echo

# end of main
}

main
